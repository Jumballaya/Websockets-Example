image: docker:latest
services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  REG_BASE_URI: registry.gitlab.com
  REG_BASE: ${REG_BASE_URI}/pburris.dev/cursors
  REG_USER: gitlab-ci-token

  GCLOUD_PROJECT: pburris-dev
  GCLOUD_ZONE: us-central1-c
  K8S_CLUSTER: pburrisdev

build:
  stage: build
  script:
    - docker login -u ${REG_USER} -p ${REG_TOKEN} ${REG_BASE}
    - docker build -f ./config/client.prod.Dockerfile -t ${REG_BASE}/client .
    - docker build -f ./config/server.Dockerfile -t ${REG_BASE}/server .
    - docker tag ${REG_BASE}/client ${REG_BASE}/client:latest
    - docker tag ${REG_BASE}/server ${REG_BASE}/server:latest
    - docker push ${REG_BASE}/client:latest
    - docker push ${REG_BASE}/server:latest

deploy:
  stage: deploy
  image: google/cloud-sdk
  script:
    - echo $K8S_JSON > ./k8s-token.json
    - gcloud auth activate-service-account --key-file ./k8s-token.json
    - gcloud config set project ${GCLOUD_PROJECT}
    - gcloud config set compute/zone ${GCLOUD_ZONE}
    - gcloud container clusters get-credentials ${K8S_CLUSTER}
    - kubectl delete -f ./config/k8s/server-deployment.yaml || true
    - kubectl delete -f ./config/k8s/client-deployment.yaml || true
    - kubectl create -f ./config/k8s/server-deployment.yaml --validate=false
    - kubectl create -f ./config/k8s/client-deployment.yaml --validate=false
    - kubectl apply -f ./config/k8s
    - kubectl describe ingress